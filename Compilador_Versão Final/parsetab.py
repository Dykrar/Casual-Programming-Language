
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programleftANDORnonassocLESS_OR_EQUALSGREATER_OR_EQUALGREATERLESSCOMPNOT_EQUALSNOTleftPLUSMINUSleftTIMESDIVIDEMODULOrightUMINUSAND BOOL_TYPE COLON COMMA COMP CREATE_ARRAY DECL DEF DIVIDE ELSE EQUALS FALSE FLOAT FLOAT_TYPE GET_ARRAY GREATER GREATER_OR_EQUAL IF INT INT_TYPE LAMBDA LBRACKET LESS LESS_OR_EQUALS LPAREN LRPAREN MINUS MODULO NOT NOT_EQUALS OR PLUS PRINT RBRACKET RETURN RPAREN RRPAREN SEMICOLONS STRING STRING_TYPE TIMES TRUE VARIABLE VOID_TYPE WHILEdef_declr : declaration def_declr\n                 | definition def_declr\n                 | declaration\n                 | definition program : def_declr declaration : DECL VARIABLE LPAREN varg RPAREN COLON type\n                   | DECL VARIABLE LPAREN arg RPAREN COLON typedefinition : DEF VARIABLE LPAREN arg RPAREN COLON type block\n                  | DEF VARIABLE LPAREN varg RPAREN COLON type block varg : arg : VARIABLE COLON type\n           | VARIABLE COLON type COMMA argargf :arg_f : expression \n             | expression COMMA arg_fargument_f : arg_f\n                  | argf block : LBRACKET block_content RBRACKET\n             | LBRACKET empty RBRACKET block_content : statement block_content\n                      | statementstatement     : return  \n                     | stat_expression \n                     | if \n                     | if_else \n                     | while \n                     | var_decl \n                     | var_ass\n                     | array_decl\n                     | array_ass\n                     | print\n                     | lambda_expressionstat_expression : expression SEMICOLONS lambda_expression : LAMBDA arg COLON expression \n                         | LAMBDA varg COLON expressionprint_helper : COMMA expression\n\t                | COMMA expression print_helperprint : PRINT LPAREN STRING print_helper RPAREN SEMICOLONS\n\t         | PRINT LPAREN STRING empty RPAREN SEMICOLONSreturn : RETURN SEMICOLONS\n              | RETURN expression SEMICOLONS\n              | RETURN lambda_expression SEMICOLONSif : IF expression blockif_else : IF expression block ELSE blockwhile : WHILE expression blockcreate_array : CREATE_ARRAY LPAREN expression RPARENarray_decl : VARIABLE COLON  type LRPAREN expression RRPAREN SEMICOLONS\n                  | VARIABLE COLON  type EQUALS create_array SEMICOLONSarray_ass : VARIABLE LRPAREN expression RRPAREN EQUALS expression SEMICOLONSget_array : GET_ARRAY LRPAREN VARIABLE RRPARENexpression : VARIABLE LRPAREN expression RRPAREN  \n                  | get_array LRPAREN expression RRPARENvar_decl : VARIABLE COLON type EQUALS expression SEMICOLONS\n                | VARIABLE COLON type EQUALS lambda_expression SEMICOLONSvar_ass : VARIABLE EQUALS expression SEMICOLONS\n                | VARIABLE EQUALS lambda_expression SEMICOLONStype : INT_TYPE\n            | FLOAT_TYPE\n            | STRING_TYPE\n            | BOOL_TYPE  \n            | VOID_TYPEexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression COMP expression\n                  | expression AND expression\n                  | expression OR expression\n                  | expression NOT_EQUALS expression\n                  | expression GREATER_OR_EQUAL expression\n                  | expression LESS_OR_EQUALS expression\n                  | expression GREATER expression\n                  | expression LESS expression\n                  | expression MODULO expressionexpression : MINUS expression %prec UMINUSexpression : LPAREN expression RPARENexpression : INTexpression : FLOATexpression : STRINGexpression : TRUE\n                  | FALSEexpression : VARIABLEexpression : NOT expressionexpression : VARIABLE LPAREN argument_f RPARENempty : '
    
_lr_action_items = {'DECL':([0,3,4,24,25,26,27,28,34,35,39,41,73,74,],[5,5,5,-57,-58,-59,-60,-61,-6,-7,-8,-9,-18,-19,]),'DEF':([0,3,4,24,25,26,27,28,34,35,39,41,73,74,],[6,6,6,-57,-58,-59,-60,-61,-6,-7,-8,-9,-18,-19,]),'$end':([1,2,3,4,7,8,24,25,26,27,28,34,35,39,41,73,74,],[0,-5,-3,-4,-1,-2,-57,-58,-59,-60,-61,-6,-7,-8,-9,-18,-19,]),'VARIABLE':([5,6,11,12,33,40,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,62,63,64,66,67,68,69,70,71,73,74,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,135,136,137,142,143,144,145,147,148,151,152,153,154,156,157,163,168,169,170,171,174,175,178,179,],[9,10,13,13,13,60,60,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,79,79,79,79,-79,13,79,-77,-78,-80,-81,79,-18,-19,-40,-82,-33,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,-75,-83,139,-41,-42,79,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-43,-45,-76,79,79,79,79,-55,-56,-84,79,79,-34,-35,-52,-51,-44,79,-53,-54,-48,79,-38,-39,-47,-49,]),'LPAREN':([9,10,40,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,66,67,68,69,70,71,73,74,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,99,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,135,136,137,142,143,144,145,147,148,151,152,153,154,156,157,161,163,168,169,170,171,174,175,178,179,],[11,12,62,62,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,62,62,62,99,100,62,-79,62,-77,-78,-80,-81,62,-18,-19,-40,99,-33,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-75,-83,-41,-42,62,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-43,-45,-76,62,62,62,62,-55,-56,-84,62,62,-34,-35,-52,-51,-44,171,62,-53,-54,-48,62,-38,-39,-47,-49,]),'RPAREN':([11,12,14,15,16,17,23,24,25,26,27,28,38,63,67,68,69,70,79,99,101,105,106,111,112,113,114,115,116,117,118,119,120,121,122,123,130,131,132,133,134,135,147,149,150,154,156,164,167,176,177,],[-10,-10,19,20,21,22,-11,-57,-58,-59,-60,-61,-12,-79,-77,-78,-80,-81,-82,-13,135,-75,-83,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,147,-16,-17,-14,-85,-76,-84,165,166,-52,-51,-15,-36,-37,180,]),'COLON':([13,19,20,21,22,23,24,25,26,27,28,38,60,64,102,103,],[18,29,30,31,32,-11,-57,-58,-59,-60,-61,-12,96,-10,136,137,]),'INT_TYPE':([18,29,30,31,32,96,],[24,24,24,24,24,24,]),'FLOAT_TYPE':([18,29,30,31,32,96,],[25,25,25,25,25,25,]),'STRING_TYPE':([18,29,30,31,32,96,],[26,26,26,26,26,26,]),'BOOL_TYPE':([18,29,30,31,32,96,],[27,27,27,27,27,27,]),'VOID_TYPE':([18,29,30,31,32,96,],[28,28,28,28,28,28,]),'COMMA':([23,24,25,26,27,28,63,67,68,69,70,79,105,106,111,112,113,114,115,116,117,118,119,120,121,122,123,133,134,135,147,154,156,167,],[33,-57,-58,-59,-60,-61,-79,-77,-78,-80,-81,-82,-75,-83,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,148,151,-76,-84,-52,-51,151,]),'LBRACKET':([24,25,26,27,28,36,37,63,67,68,69,70,79,94,95,105,106,111,112,113,114,115,116,117,118,119,120,121,122,123,135,141,147,154,156,],[-57,-58,-59,-60,-61,40,40,-79,-77,-78,-80,-81,-82,40,40,-75,-83,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-76,40,-84,-52,-51,]),'EQUALS':([24,25,26,27,28,60,126,146,],[-57,-58,-59,-60,-61,97,142,163,]),'LRPAREN':([24,25,26,27,28,60,65,72,79,126,155,],[-57,-58,-59,-60,-61,98,104,107,110,143,-50,]),'RBRACKET':([40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,63,67,68,69,70,73,74,75,76,79,80,105,106,108,109,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,135,144,145,147,152,153,154,156,157,168,169,170,174,175,178,179,],[-85,73,74,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-79,-77,-78,-80,-81,-18,-19,-20,-40,-82,-33,-75,-83,-41,-42,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-43,-45,-76,-55,-56,-84,-34,-35,-52,-51,-44,-53,-54,-48,-38,-39,-47,-49,]),'RETURN':([40,44,45,46,47,48,49,50,51,52,53,54,55,63,67,68,69,70,73,74,76,79,80,105,106,108,109,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,135,144,145,147,152,153,154,156,157,168,169,170,174,175,178,179,],[56,56,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-79,-77,-78,-80,-81,-18,-19,-40,-82,-33,-75,-83,-41,-42,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-43,-45,-76,-55,-56,-84,-34,-35,-52,-51,-44,-53,-54,-48,-38,-39,-47,-49,]),'IF':([40,44,45,46,47,48,49,50,51,52,53,54,55,63,67,68,69,70,73,74,76,79,80,105,106,108,109,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,135,144,145,147,152,153,154,156,157,168,169,170,174,175,178,179,],[58,58,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-79,-77,-78,-80,-81,-18,-19,-40,-82,-33,-75,-83,-41,-42,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-43,-45,-76,-55,-56,-84,-34,-35,-52,-51,-44,-53,-54,-48,-38,-39,-47,-49,]),'WHILE':([40,44,45,46,47,48,49,50,51,52,53,54,55,63,67,68,69,70,73,74,76,79,80,105,106,108,109,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,135,144,145,147,152,153,154,156,157,168,169,170,174,175,178,179,],[59,59,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-79,-77,-78,-80,-81,-18,-19,-40,-82,-33,-75,-83,-41,-42,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-43,-45,-76,-55,-56,-84,-34,-35,-52,-51,-44,-53,-54,-48,-38,-39,-47,-49,]),'PRINT':([40,44,45,46,47,48,49,50,51,52,53,54,55,63,67,68,69,70,73,74,76,79,80,105,106,108,109,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,135,144,145,147,152,153,154,156,157,168,169,170,174,175,178,179,],[61,61,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-79,-77,-78,-80,-81,-18,-19,-40,-82,-33,-75,-83,-41,-42,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-43,-45,-76,-55,-56,-84,-34,-35,-52,-51,-44,-53,-54,-48,-38,-39,-47,-49,]),'LAMBDA':([40,44,45,46,47,48,49,50,51,52,53,54,55,56,63,67,68,69,70,73,74,76,79,80,97,105,106,108,109,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,135,142,144,145,147,152,153,154,156,157,168,169,170,174,175,178,179,],[64,64,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,64,-79,-77,-78,-80,-81,-18,-19,-40,-82,-33,64,-75,-83,-41,-42,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-43,-45,-76,64,-55,-56,-84,-34,-35,-52,-51,-44,-53,-54,-48,-38,-39,-47,-49,]),'MINUS':([40,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,66,67,68,69,70,71,73,74,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,101,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,129,133,135,136,137,138,140,142,143,144,145,146,147,148,151,152,153,154,156,157,158,162,163,167,168,169,170,171,173,174,175,177,178,179,],[66,66,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,66,82,66,66,-82,66,-79,66,-77,-78,-80,-81,66,-18,-19,-40,82,-82,-33,66,66,66,66,66,66,66,66,66,66,66,66,66,82,82,66,66,66,82,66,-75,82,-41,-42,66,-62,-63,-64,-65,82,82,82,82,82,82,82,82,-74,-43,-45,82,82,82,-76,66,66,82,82,66,66,-55,-56,-51,-84,66,66,82,82,-52,-51,-44,82,82,66,82,-53,-54,-48,66,82,-38,-39,82,-47,-49,]),'INT':([40,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,62,63,66,67,68,69,70,71,73,74,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,99,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,135,136,137,142,143,144,145,147,148,151,152,153,154,156,157,163,168,169,170,171,174,175,178,179,],[67,67,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,67,67,67,67,-79,67,-77,-78,-80,-81,67,-18,-19,-40,-82,-33,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-75,-83,-41,-42,67,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-43,-45,-76,67,67,67,67,-55,-56,-84,67,67,-34,-35,-52,-51,-44,67,-53,-54,-48,67,-38,-39,-47,-49,]),'FLOAT':([40,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,62,63,66,67,68,69,70,71,73,74,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,99,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,135,136,137,142,143,144,145,147,148,151,152,153,154,156,157,163,168,169,170,171,174,175,178,179,],[68,68,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,68,68,68,68,-79,68,-77,-78,-80,-81,68,-18,-19,-40,-82,-33,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-75,-83,-41,-42,68,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-43,-45,-76,68,68,68,68,-55,-56,-84,68,68,-34,-35,-52,-51,-44,68,-53,-54,-48,68,-38,-39,-47,-49,]),'STRING':([40,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,62,63,66,67,68,69,70,71,73,74,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,99,100,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,135,136,137,142,143,144,145,147,148,151,152,153,154,156,157,163,168,169,170,171,174,175,178,179,],[63,63,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,63,63,63,63,-79,63,-77,-78,-80,-81,63,-18,-19,-40,-82,-33,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,134,63,-75,-83,-41,-42,63,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-43,-45,-76,63,63,63,63,-55,-56,-84,63,63,-34,-35,-52,-51,-44,63,-53,-54,-48,63,-38,-39,-47,-49,]),'TRUE':([40,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,62,63,66,67,68,69,70,71,73,74,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,99,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,135,136,137,142,143,144,145,147,148,151,152,153,154,156,157,163,168,169,170,171,174,175,178,179,],[69,69,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,69,69,69,69,-79,69,-77,-78,-80,-81,69,-18,-19,-40,-82,-33,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-75,-83,-41,-42,69,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-43,-45,-76,69,69,69,69,-55,-56,-84,69,69,-34,-35,-52,-51,-44,69,-53,-54,-48,69,-38,-39,-47,-49,]),'FALSE':([40,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,62,63,66,67,68,69,70,71,73,74,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,99,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,135,136,137,142,143,144,145,147,148,151,152,153,154,156,157,163,168,169,170,171,174,175,178,179,],[70,70,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,70,70,70,70,-79,70,-77,-78,-80,-81,70,-18,-19,-40,-82,-33,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-75,-83,-41,-42,70,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-43,-45,-76,70,70,70,70,-55,-56,-84,70,70,-34,-35,-52,-51,-44,70,-53,-54,-48,70,-38,-39,-47,-49,]),'NOT':([40,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,62,63,66,67,68,69,70,71,73,74,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,99,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,135,136,137,142,143,144,145,147,148,151,152,153,154,156,157,163,168,169,170,171,174,175,178,179,],[71,71,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,71,71,71,71,-79,71,-77,-78,-80,-81,71,-18,-19,-40,-82,-33,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-75,-83,-41,-42,71,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-43,-45,-76,71,71,71,71,-55,-56,-84,71,71,-34,-35,-52,-51,-44,71,-53,-54,-48,71,-38,-39,-47,-49,]),'GET_ARRAY':([40,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,62,63,66,67,68,69,70,71,73,74,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,99,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,135,136,137,142,143,144,145,147,148,151,152,153,154,156,157,163,168,169,170,171,174,175,178,179,],[72,72,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,72,72,72,72,-79,72,-77,-78,-80,-81,72,-18,-19,-40,-82,-33,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-75,-83,-41,-42,72,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-43,-45,-76,72,72,72,72,-55,-56,-84,72,72,-34,-35,-52,-51,-44,72,-53,-54,-48,72,-38,-39,-47,-49,]),'SEMICOLONS':([56,57,60,63,67,68,69,70,77,78,79,105,106,111,112,113,114,115,116,117,118,119,120,121,122,123,127,128,135,146,147,152,153,154,156,158,159,160,165,166,172,173,180,],[76,80,-82,-79,-77,-78,-80,-81,108,109,-82,-75,-83,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,144,145,-76,-51,-84,-34,-35,-52,-51,168,169,170,174,175,178,179,-46,]),'PLUS':([57,60,63,67,68,69,70,77,79,94,95,101,105,106,111,112,113,114,115,116,117,118,119,120,121,122,123,127,129,133,135,138,140,146,147,152,153,154,156,158,162,167,173,177,],[81,-82,-79,-77,-78,-80,-81,81,-82,81,81,81,-75,81,-62,-63,-64,-65,81,81,81,81,81,81,81,81,-74,81,81,81,-76,81,81,-51,-84,81,81,-52,-51,81,81,81,81,81,]),'TIMES':([57,60,63,67,68,69,70,77,79,94,95,101,105,106,111,112,113,114,115,116,117,118,119,120,121,122,123,127,129,133,135,138,140,146,147,152,153,154,156,158,162,167,173,177,],[83,-82,-79,-77,-78,-80,-81,83,-82,83,83,83,-75,83,83,83,-64,-65,83,83,83,83,83,83,83,83,-74,83,83,83,-76,83,83,-51,-84,83,83,-52,-51,83,83,83,83,83,]),'DIVIDE':([57,60,63,67,68,69,70,77,79,94,95,101,105,106,111,112,113,114,115,116,117,118,119,120,121,122,123,127,129,133,135,138,140,146,147,152,153,154,156,158,162,167,173,177,],[84,-82,-79,-77,-78,-80,-81,84,-82,84,84,84,-75,84,84,84,-64,-65,84,84,84,84,84,84,84,84,-74,84,84,84,-76,84,84,-51,-84,84,84,-52,-51,84,84,84,84,84,]),'COMP':([57,60,63,67,68,69,70,77,79,94,95,101,105,106,111,112,113,114,115,116,117,118,119,120,121,122,123,127,129,133,135,138,140,146,147,152,153,154,156,158,162,167,173,177,],[85,-82,-79,-77,-78,-80,-81,85,-82,85,85,85,-75,None,-62,-63,-64,-65,None,85,85,None,None,None,None,None,-74,85,85,85,-76,85,85,-51,-84,85,85,-52,-51,85,85,85,85,85,]),'AND':([57,60,63,67,68,69,70,77,79,94,95,101,105,106,111,112,113,114,115,116,117,118,119,120,121,122,123,127,129,133,135,138,140,146,147,152,153,154,156,158,162,167,173,177,],[86,-82,-79,-77,-78,-80,-81,86,-82,86,86,86,-75,-83,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,86,86,86,-76,86,86,-51,-84,86,86,-52,-51,86,86,86,86,86,]),'OR':([57,60,63,67,68,69,70,77,79,94,95,101,105,106,111,112,113,114,115,116,117,118,119,120,121,122,123,127,129,133,135,138,140,146,147,152,153,154,156,158,162,167,173,177,],[87,-82,-79,-77,-78,-80,-81,87,-82,87,87,87,-75,-83,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,87,87,87,-76,87,87,-51,-84,87,87,-52,-51,87,87,87,87,87,]),'NOT_EQUALS':([57,60,63,67,68,69,70,77,79,94,95,101,105,106,111,112,113,114,115,116,117,118,119,120,121,122,123,127,129,133,135,138,140,146,147,152,153,154,156,158,162,167,173,177,],[88,-82,-79,-77,-78,-80,-81,88,-82,88,88,88,-75,None,-62,-63,-64,-65,None,88,88,None,None,None,None,None,-74,88,88,88,-76,88,88,-51,-84,88,88,-52,-51,88,88,88,88,88,]),'GREATER_OR_EQUAL':([57,60,63,67,68,69,70,77,79,94,95,101,105,106,111,112,113,114,115,116,117,118,119,120,121,122,123,127,129,133,135,138,140,146,147,152,153,154,156,158,162,167,173,177,],[89,-82,-79,-77,-78,-80,-81,89,-82,89,89,89,-75,None,-62,-63,-64,-65,None,89,89,None,None,None,None,None,-74,89,89,89,-76,89,89,-51,-84,89,89,-52,-51,89,89,89,89,89,]),'LESS_OR_EQUALS':([57,60,63,67,68,69,70,77,79,94,95,101,105,106,111,112,113,114,115,116,117,118,119,120,121,122,123,127,129,133,135,138,140,146,147,152,153,154,156,158,162,167,173,177,],[90,-82,-79,-77,-78,-80,-81,90,-82,90,90,90,-75,None,-62,-63,-64,-65,None,90,90,None,None,None,None,None,-74,90,90,90,-76,90,90,-51,-84,90,90,-52,-51,90,90,90,90,90,]),'GREATER':([57,60,63,67,68,69,70,77,79,94,95,101,105,106,111,112,113,114,115,116,117,118,119,120,121,122,123,127,129,133,135,138,140,146,147,152,153,154,156,158,162,167,173,177,],[91,-82,-79,-77,-78,-80,-81,91,-82,91,91,91,-75,None,-62,-63,-64,-65,None,91,91,None,None,None,None,None,-74,91,91,91,-76,91,91,-51,-84,91,91,-52,-51,91,91,91,91,91,]),'LESS':([57,60,63,67,68,69,70,77,79,94,95,101,105,106,111,112,113,114,115,116,117,118,119,120,121,122,123,127,129,133,135,138,140,146,147,152,153,154,156,158,162,167,173,177,],[92,-82,-79,-77,-78,-80,-81,92,-82,92,92,92,-75,None,-62,-63,-64,-65,None,92,92,None,None,None,None,None,-74,92,92,92,-76,92,92,-51,-84,92,92,-52,-51,92,92,92,92,92,]),'MODULO':([57,60,63,67,68,69,70,77,79,94,95,101,105,106,111,112,113,114,115,116,117,118,119,120,121,122,123,127,129,133,135,138,140,146,147,152,153,154,156,158,162,167,173,177,],[93,-82,-79,-77,-78,-80,-81,93,-82,93,93,93,-75,93,93,93,-64,-65,93,93,93,93,93,93,93,93,-74,93,93,93,-76,93,93,-51,-84,93,93,-52,-51,93,93,93,93,93,]),'RRPAREN':([63,67,68,69,70,79,105,106,111,112,113,114,115,116,117,118,119,120,121,122,123,129,135,138,139,140,147,154,156,162,],[-79,-77,-78,-80,-81,-82,-75,-83,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,146,-76,154,155,156,-84,-52,-51,172,]),'ELSE':([73,74,124,],[-18,-19,141,]),'CREATE_ARRAY':([142,],[161,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'def_declr':([0,3,4,],[2,7,8,]),'declaration':([0,3,4,],[3,3,3,]),'definition':([0,3,4,],[4,4,4,]),'varg':([11,12,64,],[14,17,103,]),'arg':([11,12,33,64,],[15,16,38,102,]),'type':([18,29,30,31,32,96,],[23,34,35,36,37,126,]),'block':([36,37,94,95,141,],[39,41,124,125,157,]),'block_content':([40,44,],[42,75,]),'empty':([40,134,],[43,150,]),'statement':([40,44,],[44,44,]),'return':([40,44,],[45,45,]),'stat_expression':([40,44,],[46,46,]),'if':([40,44,],[47,47,]),'if_else':([40,44,],[48,48,]),'while':([40,44,],[49,49,]),'var_decl':([40,44,],[50,50,]),'var_ass':([40,44,],[51,51,]),'array_decl':([40,44,],[52,52,]),'array_ass':([40,44,],[53,53,]),'print':([40,44,],[54,54,]),'lambda_expression':([40,44,56,97,142,],[55,55,78,128,159,]),'expression':([40,44,56,58,59,62,66,71,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,99,104,110,136,137,142,143,148,151,163,171,],[57,57,77,94,95,101,105,106,111,112,113,114,115,116,117,118,119,120,121,122,123,127,129,133,138,140,152,153,158,162,133,167,173,177,]),'get_array':([40,44,56,58,59,62,66,71,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,99,104,110,136,137,142,143,148,151,163,171,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'argument_f':([99,],[130,]),'arg_f':([99,148,],[131,164,]),'argf':([99,],[132,]),'print_helper':([134,167,],[149,176,]),'create_array':([142,],[160,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('def_declr -> declaration def_declr','def_declr',2,'p_def_declr','casual_main.py',176),
  ('def_declr -> definition def_declr','def_declr',2,'p_def_declr','casual_main.py',177),
  ('def_declr -> declaration','def_declr',1,'p_def_declr','casual_main.py',178),
  ('def_declr -> definition','def_declr',1,'p_def_declr','casual_main.py',179),
  ('program -> def_declr','program',1,'p_program','casual_main.py',187),
  ('declaration -> DECL VARIABLE LPAREN varg RPAREN COLON type','declaration',7,'p_declaration','casual_main.py',195),
  ('declaration -> DECL VARIABLE LPAREN arg RPAREN COLON type','declaration',7,'p_declaration','casual_main.py',196),
  ('definition -> DEF VARIABLE LPAREN arg RPAREN COLON type block','definition',8,'p_definition','casual_main.py',201),
  ('definition -> DEF VARIABLE LPAREN varg RPAREN COLON type block','definition',8,'p_definition','casual_main.py',202),
  ('varg -> <empty>','varg',0,'p_varg','casual_main.py',210),
  ('arg -> VARIABLE COLON type','arg',3,'p_arg','casual_main.py',215),
  ('arg -> VARIABLE COLON type COMMA arg','arg',5,'p_arg','casual_main.py',216),
  ('argf -> <empty>','argf',0,'p_argf','casual_main.py',223),
  ('arg_f -> expression','arg_f',1,'p_pre_arg_f','casual_main.py',227),
  ('arg_f -> expression COMMA arg_f','arg_f',3,'p_pre_arg_f','casual_main.py',228),
  ('argument_f -> arg_f','argument_f',1,'p_arg_f','casual_main.py',237),
  ('argument_f -> argf','argument_f',1,'p_arg_f','casual_main.py',238),
  ('block -> LBRACKET block_content RBRACKET','block',3,'p_block','casual_main.py',247),
  ('block -> LBRACKET empty RBRACKET','block',3,'p_block','casual_main.py',248),
  ('block_content -> statement block_content','block_content',2,'p_block_content','casual_main.py',254),
  ('block_content -> statement','block_content',1,'p_block_content','casual_main.py',255),
  ('statement -> return','statement',1,'p_statement','casual_main.py',271),
  ('statement -> stat_expression','statement',1,'p_statement','casual_main.py',272),
  ('statement -> if','statement',1,'p_statement','casual_main.py',273),
  ('statement -> if_else','statement',1,'p_statement','casual_main.py',274),
  ('statement -> while','statement',1,'p_statement','casual_main.py',275),
  ('statement -> var_decl','statement',1,'p_statement','casual_main.py',276),
  ('statement -> var_ass','statement',1,'p_statement','casual_main.py',277),
  ('statement -> array_decl','statement',1,'p_statement','casual_main.py',278),
  ('statement -> array_ass','statement',1,'p_statement','casual_main.py',279),
  ('statement -> print','statement',1,'p_statement','casual_main.py',280),
  ('statement -> lambda_expression','statement',1,'p_statement','casual_main.py',281),
  ('stat_expression -> expression SEMICOLONS','stat_expression',2,'p_stat_expression','casual_main.py',287),
  ('lambda_expression -> LAMBDA arg COLON expression','lambda_expression',4,'p_lambda','casual_main.py',294),
  ('lambda_expression -> LAMBDA varg COLON expression','lambda_expression',4,'p_lambda','casual_main.py',295),
  ('print_helper -> COMMA expression','print_helper',2,'p_print_helper','casual_main.py',304),
  ('print_helper -> COMMA expression print_helper','print_helper',3,'p_print_helper','casual_main.py',305),
  ('print -> PRINT LPAREN STRING print_helper RPAREN SEMICOLONS','print',6,'p_statment_print','casual_main.py',312),
  ('print -> PRINT LPAREN STRING empty RPAREN SEMICOLONS','print',6,'p_statment_print','casual_main.py',313),
  ('return -> RETURN SEMICOLONS','return',2,'p_return','casual_main.py',322),
  ('return -> RETURN expression SEMICOLONS','return',3,'p_return','casual_main.py',323),
  ('return -> RETURN lambda_expression SEMICOLONS','return',3,'p_return','casual_main.py',324),
  ('if -> IF expression block','if',3,'p_if','casual_main.py',334),
  ('if_else -> IF expression block ELSE block','if_else',5,'p_if_else','casual_main.py',340),
  ('while -> WHILE expression block','while',3,'p_while','casual_main.py',345),
  ('create_array -> CREATE_ARRAY LPAREN expression RPAREN','create_array',4,'p_create_array','casual_main.py',355),
  ('array_decl -> VARIABLE COLON type LRPAREN expression RRPAREN SEMICOLONS','array_decl',7,'p_array_declaration','casual_main.py',359),
  ('array_decl -> VARIABLE COLON type EQUALS create_array SEMICOLONS','array_decl',6,'p_array_declaration','casual_main.py',360),
  ('array_ass -> VARIABLE LRPAREN expression RRPAREN EQUALS expression SEMICOLONS','array_ass',7,'p_array_assign','casual_main.py',364),
  ('get_array -> GET_ARRAY LRPAREN VARIABLE RRPAREN','get_array',4,'p_get_array','casual_main.py',368),
  ('expression -> VARIABLE LRPAREN expression RRPAREN','expression',4,'p_expression_index','casual_main.py',373),
  ('expression -> get_array LRPAREN expression RRPAREN','expression',4,'p_expression_index','casual_main.py',374),
  ('var_decl -> VARIABLE COLON type EQUALS expression SEMICOLONS','var_decl',6,'p_variable_declar','casual_main.py',383),
  ('var_decl -> VARIABLE COLON type EQUALS lambda_expression SEMICOLONS','var_decl',6,'p_variable_declar','casual_main.py',384),
  ('var_ass -> VARIABLE EQUALS expression SEMICOLONS','var_ass',4,'p_variable_assign','casual_main.py',389),
  ('var_ass -> VARIABLE EQUALS lambda_expression SEMICOLONS','var_ass',4,'p_variable_assign','casual_main.py',390),
  ('type -> INT_TYPE','type',1,'p_variable_type','casual_main.py',395),
  ('type -> FLOAT_TYPE','type',1,'p_variable_type','casual_main.py',396),
  ('type -> STRING_TYPE','type',1,'p_variable_type','casual_main.py',397),
  ('type -> BOOL_TYPE','type',1,'p_variable_type','casual_main.py',398),
  ('type -> VOID_TYPE','type',1,'p_variable_type','casual_main.py',399),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','casual_main.py',407),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','casual_main.py',408),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','casual_main.py',409),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','casual_main.py',410),
  ('expression -> expression COMP expression','expression',3,'p_expression_binop','casual_main.py',411),
  ('expression -> expression AND expression','expression',3,'p_expression_binop','casual_main.py',412),
  ('expression -> expression OR expression','expression',3,'p_expression_binop','casual_main.py',413),
  ('expression -> expression NOT_EQUALS expression','expression',3,'p_expression_binop','casual_main.py',414),
  ('expression -> expression GREATER_OR_EQUAL expression','expression',3,'p_expression_binop','casual_main.py',415),
  ('expression -> expression LESS_OR_EQUALS expression','expression',3,'p_expression_binop','casual_main.py',416),
  ('expression -> expression GREATER expression','expression',3,'p_expression_binop','casual_main.py',417),
  ('expression -> expression LESS expression','expression',3,'p_expression_binop','casual_main.py',418),
  ('expression -> expression MODULO expression','expression',3,'p_expression_binop','casual_main.py',419),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','casual_main.py',425),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','casual_main.py',430),
  ('expression -> INT','expression',1,'p_expression_number_int','casual_main.py',435),
  ('expression -> FLOAT','expression',1,'p_expression_number_float','casual_main.py',440),
  ('expression -> STRING','expression',1,'p_expression_string','casual_main.py',445),
  ('expression -> TRUE','expression',1,'p_expression_boolean','casual_main.py',450),
  ('expression -> FALSE','expression',1,'p_expression_boolean','casual_main.py',451),
  ('expression -> VARIABLE','expression',1,'p_expression_variable','casual_main.py',456),
  ('expression -> NOT expression','expression',2,'p_expression_not_unary_op','casual_main.py',461),
  ('expression -> VARIABLE LPAREN argument_f RPAREN','expression',4,'p_expression_fun_invocation','casual_main.py',466),
  ('empty -> <empty>','empty',0,'p_empty','casual_main.py',472),
]
