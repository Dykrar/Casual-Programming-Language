
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftANDORnonassocLESS_OR_EQUALSGREATER_OR_EQUALGREATERLESSCOMPNOT_EQUALSNOTleftPLUSMINUSleftTIMESDIVIDEMODULOrightUMINUSAND BOOL_TYPE COLON COMMA COMP DECL DEF DIVIDE ELSE EQUALS FALSE FLOAT FLOAT_TYPE GET_ARRAY GREATER GREATER_OR_EQUAL IF INT INT_TYPE LBRACKET LESS LESS_OR_EQUALS LPAREN LRPARN MINUS MODULO NOT NOT_EQUALS OR PLUS RBRACKET RETURN RPAREN RRPAREN SEMICOLONS STRING STRING_TYPE TIMES TRUE VARIABLE VOID_TYPE WHILEprogram : declaration program\n               | definition program\n               | declaration\n               | definition empty : declaration : DECL VARIABLE LPAREN RPAREN COLON type\n                   | DECL VARIABLE LPAREN arg RPAREN COLON typedefinition : DEF VARIABLE LPAREN arg RPAREN COLON type block return\n                  | DEF VARIABLE LPAREN RPAREN COLON type block returnarg : VARIABLE COLON type\n           | VARIABLE COLON type COMMA argblock : LBRACKET block_content_check RBRACKET block_content_check : block_content block_content_check\n                            | emptyblock_content : return  \n                     | stat_expression \n                     | if \n                     | if_else \n                     | while \n                     | var_decl \n                     | var_assreturn : RETURN SEMICOLONS\n              | RETURN expression SEMICOLONSstat_expression : expression SEMICOLONS if : IF expression blockif_else : if ELSE blockwhile : WHILE expression blockvar_decl : VARIABLE COLON type EQUALS expression SEMICOLONStype : INT_TYPE\n            | FLOAT_TYPE\n            | STRING_TYPE\n            | BOOL_TYPE\n            | VOID_TYPEvar_ass : VARIABLE EQUALS expression SEMICOLONSexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression COMP expression\n                  | expression AND expression\n                  | expression OR expression\n                  | expression NOT_EQUALS expression\n                  | expression GREATER_OR_EQUAL expression\n                  | expression LESS_OR_EQUALS expression\n                  | expression GREATER expression\n                  | expression LESS expression\n                  | expression MODULO expressionexpression : MINUS expression %prec UMINUSexpression : LPAREN expression RPARENexpression : INTexpression : FLOATexpression : STRINGexpression : TRUE\n                  | FALSEexpression : VARIABLEexpression : NOT expressionexpression : VARIABLE LRPARN expression RRPAREN  \n                  | GET_ARRAY LRPARN expression RRPAREN expression : VARIABLE LPAREN arg_f RPARENarg_f : VARIABLE \n             | VARIABLE COMMA arg_f'
    
_lr_action_items = {'DECL':([0,2,3,23,24,25,26,27,28,33,39,64,65,95,],[4,4,4,-29,-30,-31,-32,-33,-6,-7,-9,-8,-22,-23,]),'DEF':([0,2,3,23,24,25,26,27,28,33,39,64,65,95,],[5,5,5,-29,-30,-31,-32,-33,-6,-7,-9,-8,-22,-23,]),'$end':([1,2,3,6,7,23,24,25,26,27,28,33,39,64,65,95,],[0,-3,-4,-1,-2,-29,-30,-31,-32,-33,-6,-7,-9,-8,-22,-23,]),'VARIABLE':([4,5,10,11,32,36,40,42,44,45,46,47,48,49,50,52,53,55,56,62,65,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,88,89,90,94,95,96,110,111,119,120,122,127,],[8,9,12,12,12,54,67,54,-15,-16,-17,-18,-19,-20,-21,67,67,67,67,67,-22,-12,-24,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,115,67,-23,-26,-25,-27,67,-34,115,-28,]),'LPAREN':([8,9,36,40,42,44,45,46,47,48,49,50,52,53,54,55,56,62,65,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,88,89,94,95,96,110,111,119,120,127,],[10,11,56,56,56,-15,-16,-17,-18,-19,-20,-21,56,56,90,56,56,56,-22,90,-12,-24,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-23,-26,-25,-27,56,-34,-28,]),'RPAREN':([10,11,14,15,22,23,24,25,26,27,37,57,58,59,60,61,67,91,92,93,97,98,99,100,101,102,103,104,105,106,107,108,109,115,116,117,121,123,124,126,],[13,16,19,20,-10,-29,-30,-31,-32,-33,-11,-50,-51,-52,-53,-54,-55,-48,117,-56,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-60,123,-49,-57,-59,-58,-61,]),'COLON':([12,13,16,19,20,54,],[17,18,21,29,30,87,]),'INT_TYPE':([17,18,21,29,30,87,],[23,23,23,23,23,23,]),'FLOAT_TYPE':([17,18,21,29,30,87,],[24,24,24,24,24,24,]),'STRING_TYPE':([17,18,21,29,30,87,],[25,25,25,25,25,25,]),'BOOL_TYPE':([17,18,21,29,30,87,],[26,26,26,26,26,26,]),'VOID_TYPE':([17,18,21,29,30,87,],[27,27,27,27,27,27,]),'COMMA':([22,23,24,25,26,27,115,],[32,-29,-30,-31,-32,-33,122,]),'LBRACKET':([23,24,25,26,27,31,34,57,58,59,60,61,67,70,85,86,91,93,97,98,99,100,101,102,103,104,105,106,107,108,109,117,121,123,124,],[-29,-30,-31,-32,-33,36,36,-50,-51,-52,-53,-54,-55,36,36,36,-48,-56,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-49,-57,-59,-58,]),'EQUALS':([23,24,25,26,27,54,112,],[-29,-30,-31,-32,-33,88,119,]),'RETURN':([35,36,38,42,44,45,46,47,48,49,50,65,68,71,95,96,110,111,120,127,],[40,40,40,40,-15,-16,-17,-18,-19,-20,-21,-22,-12,-24,-23,-26,-25,-27,-34,-28,]),'RBRACKET':([36,41,42,43,44,45,46,47,48,49,50,65,68,69,71,95,96,110,111,120,127,],[-5,68,-5,-14,-15,-16,-17,-18,-19,-20,-21,-22,-12,-13,-24,-23,-26,-25,-27,-34,-28,]),'IF':([36,42,44,45,46,47,48,49,50,65,68,71,95,96,110,111,120,127,],[52,52,-15,-16,-17,-18,-19,-20,-21,-22,-12,-24,-23,-26,-25,-27,-34,-28,]),'WHILE':([36,42,44,45,46,47,48,49,50,65,68,71,95,96,110,111,120,127,],[53,53,-15,-16,-17,-18,-19,-20,-21,-22,-12,-24,-23,-26,-25,-27,-34,-28,]),'MINUS':([36,40,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,66,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,117,118,119,120,121,123,124,125,127,],[55,55,55,-15,-16,-17,-18,-19,-20,-21,73,55,55,-55,55,55,-50,-51,-52,-53,-54,55,-22,73,-55,-12,-24,55,55,55,55,55,55,55,55,55,55,55,55,55,73,73,55,55,-48,73,73,55,-23,-26,-35,-36,-37,-38,73,73,73,73,73,73,73,73,-47,-25,-27,73,73,-49,73,55,-34,-57,-59,-58,73,-28,]),'INT':([36,40,42,44,45,46,47,48,49,50,52,53,55,56,62,65,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,88,89,94,95,96,110,111,119,120,127,],[57,57,57,-15,-16,-17,-18,-19,-20,-21,57,57,57,57,57,-22,-12,-24,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-23,-26,-25,-27,57,-34,-28,]),'FLOAT':([36,40,42,44,45,46,47,48,49,50,52,53,55,56,62,65,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,88,89,94,95,96,110,111,119,120,127,],[58,58,58,-15,-16,-17,-18,-19,-20,-21,58,58,58,58,58,-22,-12,-24,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-23,-26,-25,-27,58,-34,-28,]),'STRING':([36,40,42,44,45,46,47,48,49,50,52,53,55,56,62,65,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,88,89,94,95,96,110,111,119,120,127,],[59,59,59,-15,-16,-17,-18,-19,-20,-21,59,59,59,59,59,-22,-12,-24,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-23,-26,-25,-27,59,-34,-28,]),'TRUE':([36,40,42,44,45,46,47,48,49,50,52,53,55,56,62,65,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,88,89,94,95,96,110,111,119,120,127,],[60,60,60,-15,-16,-17,-18,-19,-20,-21,60,60,60,60,60,-22,-12,-24,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-23,-26,-25,-27,60,-34,-28,]),'FALSE':([36,40,42,44,45,46,47,48,49,50,52,53,55,56,62,65,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,88,89,94,95,96,110,111,119,120,127,],[61,61,61,-15,-16,-17,-18,-19,-20,-21,61,61,61,61,61,-22,-12,-24,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-23,-26,-25,-27,61,-34,-28,]),'NOT':([36,40,42,44,45,46,47,48,49,50,52,53,55,56,62,65,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,88,89,94,95,96,110,111,119,120,127,],[62,62,62,-15,-16,-17,-18,-19,-20,-21,62,62,62,62,62,-22,-12,-24,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-23,-26,-25,-27,62,-34,-28,]),'GET_ARRAY':([36,40,42,44,45,46,47,48,49,50,52,53,55,56,62,65,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,88,89,94,95,96,110,111,119,120,127,],[63,63,63,-15,-16,-17,-18,-19,-20,-21,63,63,63,63,63,-22,-12,-24,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-23,-26,-25,-27,63,-34,-28,]),'SEMICOLONS':([40,51,54,57,58,59,60,61,66,67,91,93,97,98,99,100,101,102,103,104,105,106,107,108,109,113,117,121,123,124,125,],[65,71,-55,-50,-51,-52,-53,-54,95,-55,-48,-56,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,120,-49,-57,-59,-58,127,]),'ELSE':([46,68,110,],[70,-12,-25,]),'PLUS':([51,54,57,58,59,60,61,66,67,85,86,91,92,93,97,98,99,100,101,102,103,104,105,106,107,108,109,113,114,117,118,121,123,124,125,],[72,-55,-50,-51,-52,-53,-54,72,-55,72,72,-48,72,72,-35,-36,-37,-38,72,72,72,72,72,72,72,72,-47,72,72,-49,72,-57,-59,-58,72,]),'TIMES':([51,54,57,58,59,60,61,66,67,85,86,91,92,93,97,98,99,100,101,102,103,104,105,106,107,108,109,113,114,117,118,121,123,124,125,],[74,-55,-50,-51,-52,-53,-54,74,-55,74,74,-48,74,74,74,74,-37,-38,74,74,74,74,74,74,74,74,-47,74,74,-49,74,-57,-59,-58,74,]),'DIVIDE':([51,54,57,58,59,60,61,66,67,85,86,91,92,93,97,98,99,100,101,102,103,104,105,106,107,108,109,113,114,117,118,121,123,124,125,],[75,-55,-50,-51,-52,-53,-54,75,-55,75,75,-48,75,75,75,75,-37,-38,75,75,75,75,75,75,75,75,-47,75,75,-49,75,-57,-59,-58,75,]),'COMP':([51,54,57,58,59,60,61,66,67,85,86,91,92,93,97,98,99,100,101,102,103,104,105,106,107,108,109,113,114,117,118,121,123,124,125,],[76,-55,-50,-51,-52,-53,-54,76,-55,76,76,-48,76,None,-35,-36,-37,-38,None,76,76,None,None,None,None,None,-47,76,76,-49,76,-57,-59,-58,76,]),'AND':([51,54,57,58,59,60,61,66,67,85,86,91,92,93,97,98,99,100,101,102,103,104,105,106,107,108,109,113,114,117,118,121,123,124,125,],[77,-55,-50,-51,-52,-53,-54,77,-55,77,77,-48,77,-56,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,77,77,-49,77,-57,-59,-58,77,]),'OR':([51,54,57,58,59,60,61,66,67,85,86,91,92,93,97,98,99,100,101,102,103,104,105,106,107,108,109,113,114,117,118,121,123,124,125,],[78,-55,-50,-51,-52,-53,-54,78,-55,78,78,-48,78,-56,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,78,78,-49,78,-57,-59,-58,78,]),'NOT_EQUALS':([51,54,57,58,59,60,61,66,67,85,86,91,92,93,97,98,99,100,101,102,103,104,105,106,107,108,109,113,114,117,118,121,123,124,125,],[79,-55,-50,-51,-52,-53,-54,79,-55,79,79,-48,79,None,-35,-36,-37,-38,None,79,79,None,None,None,None,None,-47,79,79,-49,79,-57,-59,-58,79,]),'GREATER_OR_EQUAL':([51,54,57,58,59,60,61,66,67,85,86,91,92,93,97,98,99,100,101,102,103,104,105,106,107,108,109,113,114,117,118,121,123,124,125,],[80,-55,-50,-51,-52,-53,-54,80,-55,80,80,-48,80,None,-35,-36,-37,-38,None,80,80,None,None,None,None,None,-47,80,80,-49,80,-57,-59,-58,80,]),'LESS_OR_EQUALS':([51,54,57,58,59,60,61,66,67,85,86,91,92,93,97,98,99,100,101,102,103,104,105,106,107,108,109,113,114,117,118,121,123,124,125,],[81,-55,-50,-51,-52,-53,-54,81,-55,81,81,-48,81,None,-35,-36,-37,-38,None,81,81,None,None,None,None,None,-47,81,81,-49,81,-57,-59,-58,81,]),'GREATER':([51,54,57,58,59,60,61,66,67,85,86,91,92,93,97,98,99,100,101,102,103,104,105,106,107,108,109,113,114,117,118,121,123,124,125,],[82,-55,-50,-51,-52,-53,-54,82,-55,82,82,-48,82,None,-35,-36,-37,-38,None,82,82,None,None,None,None,None,-47,82,82,-49,82,-57,-59,-58,82,]),'LESS':([51,54,57,58,59,60,61,66,67,85,86,91,92,93,97,98,99,100,101,102,103,104,105,106,107,108,109,113,114,117,118,121,123,124,125,],[83,-55,-50,-51,-52,-53,-54,83,-55,83,83,-48,83,None,-35,-36,-37,-38,None,83,83,None,None,None,None,None,-47,83,83,-49,83,-57,-59,-58,83,]),'MODULO':([51,54,57,58,59,60,61,66,67,85,86,91,92,93,97,98,99,100,101,102,103,104,105,106,107,108,109,113,114,117,118,121,123,124,125,],[84,-55,-50,-51,-52,-53,-54,84,-55,84,84,-48,84,84,84,84,-37,-38,84,84,84,84,84,84,84,84,-47,84,84,-49,84,-57,-59,-58,84,]),'LRPARN':([54,63,67,],[89,94,89,]),'RRPAREN':([57,58,59,60,61,67,91,93,97,98,99,100,101,102,103,104,105,106,107,108,109,114,117,118,121,123,124,],[-50,-51,-52,-53,-54,-55,-48,-56,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,121,-49,124,-57,-59,-58,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,3,],[1,6,7,]),'declaration':([0,2,3,],[2,2,2,]),'definition':([0,2,3,],[3,3,3,]),'arg':([10,11,32,],[14,15,37,]),'type':([17,18,21,29,30,87,],[22,28,31,33,34,112,]),'block':([31,34,70,85,86,],[35,38,96,110,111,]),'return':([35,36,38,42,],[39,44,64,44,]),'block_content_check':([36,42,],[41,69,]),'block_content':([36,42,],[42,42,]),'empty':([36,42,],[43,43,]),'stat_expression':([36,42,],[45,45,]),'if':([36,42,],[46,46,]),'if_else':([36,42,],[47,47,]),'while':([36,42,],[48,48,]),'var_decl':([36,42,],[49,49,]),'var_ass':([36,42,],[50,50,]),'expression':([36,40,42,52,53,55,56,62,72,73,74,75,76,77,78,79,80,81,82,83,84,88,89,94,119,],[51,66,51,85,86,91,92,93,97,98,99,100,101,102,103,104,105,106,107,108,109,113,114,118,125,]),'arg_f':([90,122,],[116,126,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declaration program','program',2,'p_program','projeto1.py',141),
  ('program -> definition program','program',2,'p_program','projeto1.py',142),
  ('program -> declaration','program',1,'p_program','projeto1.py',143),
  ('program -> definition','program',1,'p_program','projeto1.py',144),
  ('empty -> <empty>','empty',0,'p_empty','projeto1.py',147),
  ('declaration -> DECL VARIABLE LPAREN RPAREN COLON type','declaration',6,'p_declaration','projeto1.py',150),
  ('declaration -> DECL VARIABLE LPAREN arg RPAREN COLON type','declaration',7,'p_declaration','projeto1.py',151),
  ('definition -> DEF VARIABLE LPAREN arg RPAREN COLON type block return','definition',9,'p_definition','projeto1.py',154),
  ('definition -> DEF VARIABLE LPAREN RPAREN COLON type block return','definition',8,'p_definition','projeto1.py',155),
  ('arg -> VARIABLE COLON type','arg',3,'p_arg','projeto1.py',158),
  ('arg -> VARIABLE COLON type COMMA arg','arg',5,'p_arg','projeto1.py',159),
  ('block -> LBRACKET block_content_check RBRACKET','block',3,'p_block','projeto1.py',162),
  ('block_content_check -> block_content block_content_check','block_content_check',2,'p_block_content_check','projeto1.py',165),
  ('block_content_check -> empty','block_content_check',1,'p_block_content_check','projeto1.py',166),
  ('block_content -> return','block_content',1,'p_block_content','projeto1.py',168),
  ('block_content -> stat_expression','block_content',1,'p_block_content','projeto1.py',169),
  ('block_content -> if','block_content',1,'p_block_content','projeto1.py',170),
  ('block_content -> if_else','block_content',1,'p_block_content','projeto1.py',171),
  ('block_content -> while','block_content',1,'p_block_content','projeto1.py',172),
  ('block_content -> var_decl','block_content',1,'p_block_content','projeto1.py',173),
  ('block_content -> var_ass','block_content',1,'p_block_content','projeto1.py',174),
  ('return -> RETURN SEMICOLONS','return',2,'p_return','projeto1.py',177),
  ('return -> RETURN expression SEMICOLONS','return',3,'p_return','projeto1.py',178),
  ('stat_expression -> expression SEMICOLONS','stat_expression',2,'p_stat_expression','projeto1.py',181),
  ('if -> IF expression block','if',3,'p_if','projeto1.py',184),
  ('if_else -> if ELSE block','if_else',3,'p_if_else','projeto1.py',187),
  ('while -> WHILE expression block','while',3,'p_while','projeto1.py',190),
  ('var_decl -> VARIABLE COLON type EQUALS expression SEMICOLONS','var_decl',6,'p_variable_declar','projeto1.py',193),
  ('type -> INT_TYPE','type',1,'p_variable_type','projeto1.py',196),
  ('type -> FLOAT_TYPE','type',1,'p_variable_type','projeto1.py',197),
  ('type -> STRING_TYPE','type',1,'p_variable_type','projeto1.py',198),
  ('type -> BOOL_TYPE','type',1,'p_variable_type','projeto1.py',199),
  ('type -> VOID_TYPE','type',1,'p_variable_type','projeto1.py',200),
  ('var_ass -> VARIABLE EQUALS expression SEMICOLONS','var_ass',4,'p_variable_assign','projeto1.py',203),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','projeto1.py',206),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','projeto1.py',207),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','projeto1.py',208),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','projeto1.py',209),
  ('expression -> expression COMP expression','expression',3,'p_expression_binop','projeto1.py',210),
  ('expression -> expression AND expression','expression',3,'p_expression_binop','projeto1.py',211),
  ('expression -> expression OR expression','expression',3,'p_expression_binop','projeto1.py',212),
  ('expression -> expression NOT_EQUALS expression','expression',3,'p_expression_binop','projeto1.py',213),
  ('expression -> expression GREATER_OR_EQUAL expression','expression',3,'p_expression_binop','projeto1.py',214),
  ('expression -> expression LESS_OR_EQUALS expression','expression',3,'p_expression_binop','projeto1.py',215),
  ('expression -> expression GREATER expression','expression',3,'p_expression_binop','projeto1.py',216),
  ('expression -> expression LESS expression','expression',3,'p_expression_binop','projeto1.py',217),
  ('expression -> expression MODULO expression','expression',3,'p_expression_binop','projeto1.py',218),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','projeto1.py',221),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','projeto1.py',224),
  ('expression -> INT','expression',1,'p_expression_number_int','projeto1.py',227),
  ('expression -> FLOAT','expression',1,'p_expression_number_float','projeto1.py',230),
  ('expression -> STRING','expression',1,'p_expression_string','projeto1.py',233),
  ('expression -> TRUE','expression',1,'p_expression_boolean','projeto1.py',236),
  ('expression -> FALSE','expression',1,'p_expression_boolean','projeto1.py',237),
  ('expression -> VARIABLE','expression',1,'p_expression_variable','projeto1.py',240),
  ('expression -> NOT expression','expression',2,'p_expression_not_unary_op','projeto1.py',243),
  ('expression -> VARIABLE LRPARN expression RRPAREN','expression',4,'p_expression_index','projeto1.py',246),
  ('expression -> GET_ARRAY LRPARN expression RRPAREN','expression',4,'p_expression_index','projeto1.py',247),
  ('expression -> VARIABLE LPAREN arg_f RPAREN','expression',4,'p_expression_fun_invocation','projeto1.py',250),
  ('arg_f -> VARIABLE','arg_f',1,'p_arg_f','projeto1.py',253),
  ('arg_f -> VARIABLE COMMA arg_f','arg_f',3,'p_arg_f','projeto1.py',254),
]
